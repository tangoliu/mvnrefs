Maven安装和配置（以Windows为例）
想要安装 Apache Maven 在Windows系统上, 需要下载 Maven 的 zip 文件，并将其解压到你想安装的目录，并配置 Windows 环境变量。
所需工具 ：
-- JDK 1.8（maven是用Java开发的，所以maven运行需要Java运行环境的支持。注意：Maven 3.2 要求 JDK 1.6 或以上版本, 而 Maven 3.0/3.1 需要 JDK 1.5 或以上）
-- Maven 3.3.3
-- Windows 7

1. JDK 和 JAVA_HOME
确保已安装JDK，并 “JAVA_HOME” 变量已加入到 Windows 环境变量。
环境变量设置路径：系统属性--高级--环境变量--新建--JAVA_HOME变量，变量的值为JDK的安装一级目录。
2. 下载Apache Maven
访问 Maven官方网站 http://maven.apache.org/download.cgi，打开后找到下载链接。
下载 Maven 的 zip 文件，例如： apache-maven-3.3.3-bin.zip，将它解压到你要安装 Maven 的文件夹。（注意：在这一步，是拷贝安装，只是文件夹和文件，安装不是必需的。）
假设你解压缩到文件夹 –  D:\software\yiibai.com\apache-maven
3. 添加 M2_HOME 和 MAVEN_HOME
添加 M2_HOME 和 MAVEN_HOME 环境变量到 Windows 环境变量，并将其指向你的 Maven 文件夹。
Maven 说只是添加 M2_HOME , 但一些项目仍引用 Maven 的文件夹 MAVEN_HOME, 因此，为了安全也把它添加进去。
4. 添加到环境变量 - PATH
更新 PATH 变量，添加 Maven bin 文件夹到 PATH 的最后，如： %M2_HOME%\bin, 这样就可以在命令中的任何目录下运行 Maven 命令了。
5. 验证
在命令提示符下执行 mvn –-version ，查看输出结果。成功则会输出maven的版本信息。





Maven依赖机制
在 Maven 依赖机制的帮助下自动下载所有必需的依赖库，并保持版本升级。
案例分析：让我们看一个案例研究，以了解它是如何工作的。假设你想使用 Log4j 作为项目的日志。这里你要做什么？

1.在传统方式
--访问 http://logging.apache.org/log4j/
--下载 Log4 j的 jar 库
--复制 jar 到项目类路径
--手动将其包含到项目的依赖
--所有的管理需要一切由自己做
如果有 Log4j 版本升级，则需要重复上述步骤一次。

2. 在Maven的方式
--你需要知道 log4j 的 Maven 坐标（如何找到 Maven 坐标？访问 Maven 中心储存库，搜索下载您想要的jar。），例如：
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.14</version>
--它会自动下载 log4j 的1.2.14 版本库。如果“version”标签被忽略，它会自动升级库，当有新的版本时。
--声明 Maven 的坐标转换成 pom.xml 文件。
  <dependencies>
    <dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.14</version>
    </dependency>
  </dependencies>
--当 Maven 编译或构建，log4j 的 jar 会自动下载，并把它放到 Maven 本地存储库
--所有由 Maven 管理

解释说明
看看有什么不同？那么到底在Maven发生了什么？
当建立一个Maven的项目，pom.xml文件将被解析，如果看到 log4j 的 Maven 坐标，然后 Maven 按此顺序搜索 log4j 库：
1.在 Maven 的本地仓库搜索 log4j 
2.在 Maven 中央存储库搜索 log4j
3.在 Maven 远程仓库搜索 log4j(如果在 pom.xml 中有配置的话)
Maven 依赖库管理是一个非常好的工具，为您节省了大量的工作。




